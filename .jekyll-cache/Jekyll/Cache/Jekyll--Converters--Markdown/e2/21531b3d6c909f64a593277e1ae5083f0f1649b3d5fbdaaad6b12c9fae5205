I"ñ_<p><img src="/images/rust-2.png" alt="rust" /></p>

<h2 id="variabel">Variabel</h2>
<p>Pada bahasa Rust, kita dapat mendeklarasikan variabel dengan tiga keyword berikut: <code class="language-plaintext highlighter-rouge">const</code>, <code class="language-plaintext highlighter-rouge">static</code>, dan <code class="language-plaintext highlighter-rouge">let</code>.
Variabel <code class="language-plaintext highlighter-rouge">const</code> tidak akan dapat diubah atau immutable. Variabel <code class="language-plaintext highlighter-rouge">static</code> dapat diubah, namun membutuhkan keyword <code class="language-plaintext highlighter-rouge">unsafe</code>
karena operasi ini tidak aman bagi memory. Untuk <code class="language-plaintext highlighter-rouge">let</code>, <code class="language-plaintext highlighter-rouge">let</code> merupakan keyword paling umum untuk mendefinisikan variabel
dalam Rust. Tidak seperti <code class="language-plaintext highlighter-rouge">static</code> dan <code class="language-plaintext highlighter-rouge">const</code>, <code class="language-plaintext highlighter-rouge">let</code> <strong>TIDAK DAPAT</strong>	 digunakan diluar fungsi. Bila anda menggunakan <code class="language-plaintext highlighter-rouge">static</code> maupun
<code class="language-plaintext highlighter-rouge">const</code>, anda harus mendefinisikan tipe datanya secara eksplisit, sedangkan <code class="language-plaintext highlighter-rouge">let</code> tidak perlu karena compiler akan menentukannya sendiri. Namun untuk contoh di artikel ini di bagian bawah, saya akan terus mendefinisikan tipe datanya secara eksplisit untuk memperjelas. 
Keyword <code class="language-plaintext highlighter-rouge">let</code> memliki tipe data default. Bila anda me-assign sebuah nilai integer contohnya kepada variabel yang dideklarasikan dengan
keyword <code class="language-plaintext highlighter-rouge">let</code>, maka integer tersebut otomatis akan menjadi 32 bit integer (i32). Bila anda ingin memakai 8 bit integer, maka anda harus 
menuliskannya secara eksplisit. Hal ini juga berlaku pada nilai float.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">const</span> <span class="n">FOO</span><span class="p">:</span> <span class="nb">i8</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="k">static</span> <span class="n">BAR</span><span class="p">:</span> <span class="nb">i8</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="c">// i32</span>
  <span class="k">let</span> <span class="n">baz</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
  <span class="c">// i8</span>
  <span class="k">let</span> <span class="n">qux</span><span class="p">:</span> <span class="nb">i8</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="mutability">Mutability</h2>
<p>Berikutnya adalah mutability, atau bisa tidaknya variabel tersebut diubah nilainya. Secara default, variabel dalam rust semuanya 
immutable atau tidak dapat diubah. Untuk membuat sebuah variabel mutable atau dapat diubah, diperlukan sebuah keyword yang bernama <code class="language-plaintext highlighter-rouge">mut</code>. <code class="language-plaintext highlighter-rouge">mut</code> memungkinkan kita 
untuk re-assign atau memberikan nilai kembali pada suatu variabel. Bila anda mengubah nilai dari suatu variabel tanpa keyword <code class="language-plaintext highlighter-rouge">mut</code>, maka akan terjadi error.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">let</span> <span class="k">mut</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
  <span class="c">// Output: 10</span>
  <span class="nd">println!</span><span class="p">(</span><span class="s">"{}"</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
  <span class="c">// Output: 5</span>
  <span class="nd">println!</span><span class="p">(</span><span class="s">"{}"</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="tipe-data-dalam-bahasa-rust">Tipe Data dalam Bahasa Rust</h2>

<h3 id="primitive-type">Primitive Type</h3>

<table>
  <thead>
    <tr>
      <th>Tipe Data</th>
      <th>Nama Tipe</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i8</code></td>
      <td>8-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i16</code></td>
      <td>16-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i32</code></td>
      <td>32-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i64</code></td>
      <td>64-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i128</code></td>
      <td>128-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u8</code></td>
      <td>8-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u16</code></td>
      <td>16-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u32</code></td>
      <td>32-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u64</code></td>
      <td>64-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u128</code></td>
      <td>128-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">f32</code></td>
      <td>32-bit Floating Point</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">f64</code></td>
      <td>64-bit Floating Point</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">f128</code></td>
      <td>128-bit Float</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">str</code></td>
      <td>String Slices</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">bool</code></td>
      <td>Boolean</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">char</code></td>
      <td>Character</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">array</code></td>
      <td>Array dengan ukuran tetap</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">usize</code></td>
      <td>Unsigned Integer dengan ukuran Pointer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">tuple</code></td>
      <td>Tuple</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">slice</code></td>
      <td>Slice</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">isize</code></td>
      <td>Signed Integer dengan ukuran Pointer</td>
    </tr>
  </tbody>
</table>

<h4 id="penggunaan">Penggunaan</h4>

<h6 id="integer">Integer</h6>

<p>Integer merupakan tipe data bilangan bulat dengan rentang tertentu yang memiliki batas. Berikut adalah rentang minimal dan maksimal dari setiap X-bit signed integer.</p>

<table>
  <thead>
    <tr>
      <th>Tipe Integer</th>
      <th style="text-align: center">Nilai Minimum</th>
      <th style="text-align: center">Nilai Maksimum</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>8-bit Integer</td>
      <td style="text-align: center">-128</td>
      <td style="text-align: center">127</td>
    </tr>
    <tr>
      <td>16-bit Integer</td>
      <td style="text-align: center">-32768</td>
      <td style="text-align: center">32767</td>
    </tr>
    <tr>
      <td>32-bit Integer</td>
      <td style="text-align: center">-2147483648</td>
      <td style="text-align: center">2147483647</td>
    </tr>
    <tr>
      <td>64-bit Integer</td>
      <td style="text-align: center">-9223372036854775808</td>
      <td style="text-align: center">9223372036854775807</td>
    </tr>
    <tr>
      <td>128-bit Integer</td>
      <td style="text-align: center">âˆ’2^127</td>
      <td style="text-align: center">2^127 - 1</td>
    </tr>
  </tbody>
</table>

<p>Saya menuliskan 128-bit Integer dalam bentuk pangkatnya dikarenakan nilainya sangatlah besar. Untuk penggunaan, gunakan Integer untuk menyetor bilangan bulat tanpa koma, dan pakai tipe Integer seefektif mungkin dengan memperhatikan batas jarak yang tertera diatas.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">a</span><span class="p">:</span> <span class="nb">i8</span> <span class="o">=</span> <span class="mi">127</span><span class="p">;</span>
	<span class="k">let</span> <span class="n">b</span><span class="p">:</span> <span class="nb">i16</span> <span class="o">=</span> <span class="mi">32767</span><span class="p">;</span>
	<span class="k">let</span> <span class="n">c</span><span class="p">:</span> <span class="nb">i32</span> <span class="o">=</span> <span class="mi">2147483647</span><span class="p">;</span>
	
	<span class="c">// Dan seterusnya</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Contoh penggunaan pada aritmatika:</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
	<span class="k">let</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">200</span><span class="p">;</span>
	<span class="c">// OUTPUT: 242</span>
	<span class="nd">println!</span><span class="p">(</span><span class="s">"{}"</span><span class="p">,</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Untuk <code class="language-plaintext highlighter-rouge">unsigned integer</code>, <code class="language-plaintext highlighter-rouge">itype</code>, dan <code class="language-plaintext highlighter-rouge">utype</code> tidak akan dibahas disini, dikarenakan topik-topik tersebut merupakan topik yang lebih tinggi lagi.</p>

<h6 id="float">Float</h6>

<p><code class="language-plaintext highlighter-rouge">Float</code> atau <code class="language-plaintext highlighter-rouge">Floating Point</code> merupakan tipe data yang menyimpan bilangan desimal.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">x</span><span class="p">:</span> <span class="nb">f32</span> <span class="o">=</span> <span class="mf">252.25</span><span class="p">;</span>
	<span class="k">let</span> <span class="n">y</span><span class="p">:</span> <span class="nb">f64</span> <span class="o">=</span> <span class="mf">200.42</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">Float</code> juga dapat diimplementasikan untuk bilangan bulat, namun membutuhkan titik dan 0 dibelakangnya.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">x</span><span class="p">:</span> <span class="nb">f32</span> <span class="o">=</span> <span class="mf">3.0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="char">Char</h5>

<p><code class="language-plaintext highlighter-rouge">Char</code> merupakan tipe data karakter yang hanya memuat satu buah karakter dengan besar 4-bit. Pendeklarasian <code class="language-plaintext highlighter-rouge">char</code> menggunakan tanda petik satu quote karena dua petik digunakan untuk <code class="language-plaintext highlighter-rouge">string slice</code>.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">x</span><span class="p">:</span> <span class="nb">char</span> <span class="o">=</span> <span class="sc">'a'</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="string-slice">String Slice</h5>

<p><code class="language-plaintext highlighter-rouge">String Slice</code> (<code class="language-plaintext highlighter-rouge">str</code>) merupakan satu dari dua tipe <code class="language-plaintext highlighter-rouge">string</code> utama dimana yang satunya lagi merupakan tipe <code class="language-plaintext highlighter-rouge">String</code> yang bukan merupakan tipe primitif. Tipe <code class="language-plaintext highlighter-rouge">str</code> selalu dalam kondisi <code class="language-plaintext highlighter-rouge">borrowed</code> yang nanti akan dibahas di bab <code class="language-plaintext highlighter-rouge">Ownership</code>. <code class="language-plaintext highlighter-rouge">String Slice</code> tersimpan dalam <code class="language-plaintext highlighter-rouge">stack</code> memory.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">x</span><span class="p">:</span> <span class="o">&amp;</span><span class="nb">str</span> <span class="o">=</span> <span class="s">"Tipe String Slice"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="boolean">Boolean</h5>

<p><code class="language-plaintext highlighter-rouge">Boolean</code> merupakan tipe data yang hanya menyimpan salah satu dari dua buah value yakni <code class="language-plaintext highlighter-rouge">true</code> atau <code class="language-plaintext highlighter-rouge">false</code>.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">x</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="k">true</span><span class="p">;</span>
	<span class="k">let</span> <span class="n">y</span><span class="p">:</span> <span class="nb">bool</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="array">Array</h5>

<p><code class="language-plaintext highlighter-rouge">Array</code> memiliki ukuran tetap di memori. Cara pendeklarasiannya adalah sebagai berikut: <code class="language-plaintext highlighter-rouge">let nama: [tipe; ukuran] = [elm1, elm2, elm3]</code>.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">array</span><span class="p">:</span> <span class="p">[</span><span class="nb">i32</span><span class="p">;</span> <span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">];</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="tuple">Tuple</h5>

<p><code class="language-plaintext highlighter-rouge">Tuple</code> merupakan tipe yang heterogen. Ia dapat menyimpan banyak tipe data berbeda didalamnya. Elemen dalam tuple dapat diakses dengan menggunakan tanda titik setelah nama variabel tuple tersebut kemudian menuliskan index dari elemen tersebut.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">tuple</span> <span class="o">=</span> <span class="p">(</span><span class="s">"Saya tuple"</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span> <span class="mf">24.5</span><span class="p">);</span>
	<span class="k">let</span> <span class="n">elemen_pertama</span> <span class="o">=</span> <span class="n">tuple</span><span class="na">.0</span><span class="p">;</span>
	<span class="c">// OUTPUT: Saya tuple</span>
	<span class="nd">println!</span><span class="p">(</span><span class="s">"{}"</span><span class="p">,</span> <span class="n">elemen_pertama</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="slice">Slice</h5>

<p><code class="language-plaintext highlighter-rouge">Slice</code> berukuran dinamis, sebuah koleksi dari elemen. <code class="language-plaintext highlighter-rouge">Slice</code> biasanya digunakan untuk mengambil sejumlah potongan dari dalam <code class="language-plaintext highlighter-rouge">array</code>.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">array</span><span class="p">:</span> <span class="p">[</span><span class="o">&amp;</span><span class="nb">str</span><span class="p">;</span> <span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">"hai"</span><span class="p">,</span> <span class="s">"hoi"</span><span class="p">,</span> <span class="s">"halo"</span><span class="p">,</span> <span class="s">"hey"</span><span class="p">,</span> <span class="s">"hoi"</span><span class="p">];</span>
	<span class="k">let</span> <span class="n">slice</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">array</span><span class="p">[</span><span class="mi">0</span><span class="o">..</span><span class="mi">3</span><span class="p">];</span>
	
	<span class="c">// OUTPUT: hai hoi halo</span>
	<span class="k">for</span> <span class="n">i</span> <span class="n">in</span> <span class="n">slice</span> <span class="p">{</span>
		<span class="nd">print!</span><span class="p">(</span><span class="s">"{} "</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">Slice</code> diatas mengambil elemen ke-0 sampai elemen ke-2 <code class="language-plaintext highlighter-rouge">array</code> tersebut. Bila anda tidak tahu, tanda <code class="language-plaintext highlighter-rouge">&amp;</code> diatas merupakan tanda <code class="language-plaintext highlighter-rouge">reference</code> yang akan dibahas nanti.</p>

<h3 id="beberapa-tipe-non-primitif">Beberapa Tipe Non-Primitif</h3>

<h6 id="string">String</h6>

<p><code class="language-plaintext highlighter-rouge">String</code> merupakan tipe heap dinamis seperti <code class="language-plaintext highlighter-rouge">Vec</code>. Pendeklarasian <code class="language-plaintext highlighter-rouge">String</code> dapat dilakukan dengan beberapa cara.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="k">let</span> <span class="n">a</span><span class="p">:</span> <span class="nb">String</span> <span class="o">=</span> <span class="nn">String</span><span class="p">::</span><span class="nf">from</span><span class="p">(</span><span class="s">"Aku adalah String"</span><span class="p">);</span>
	<span class="k">let</span> <span class="n">b</span><span class="p">:</span> <span class="nb">String</span> <span class="o">=</span> <span class="s">"Aku adalah String"</span><span class="nf">.to_string</span><span class="p">();</span>
	<span class="k">let</span> <span class="n">c</span><span class="p">:</span> <span class="nb">String</span> <span class="o">=</span> <span class="s">"Aku adalah String"</span><span class="nf">.into</span><span class="p">();</span>
	<span class="k">let</span> <span class="k">mut</span> <span class="n">d</span><span class="p">:</span> <span class="nb">String</span> <span class="o">=</span> <span class="nn">String</span><span class="p">::</span><span class="nf">new</span><span class="p">();</span>
	
	<span class="n">d</span><span class="nf">.push_str</span><span class="p">(</span><span class="s">"Aku adalah String"</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h6 id="vec-vector">Vec (Vector)</h6>

<p><code class="language-plaintext highlighter-rouge">Vec</code> merupakan tipe data <code class="language-plaintext highlighter-rouge">vector</code> atau <code class="language-plaintext highlighter-rouge">array dinamis</code> yang tersimpan dalam memory <code class="language-plaintext highlighter-rouge">heap</code>. Vector dapat kita gunakan untuk menyimpan tipe data apapun termasuk User-defined data types atau tipe data yang kita definisikan sendiri. Pendeklarasian <code class="language-plaintext highlighter-rouge">Vec</code> untuk memasukkan value secara langsung menggunakan sebuah <code class="language-plaintext highlighter-rouge">macro</code> yang bernama <code class="language-plaintext highlighter-rouge">vec!</code> sedangkan secara tidak langsung, kita menggunakan method <code class="language-plaintext highlighter-rouge">push()</code> yang akan memasukkan value kedalam <code class="language-plaintext highlighter-rouge">vector</code> tersebut. Menggunakan <code class="language-plaintext highlighter-rouge">push()</code> membutuhkan variabel untuk <code class="language-plaintext highlighter-rouge">mutable</code> atau dapat dirubah.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="c">// Dengan macro</span>
	<span class="k">let</span> <span class="n">x</span><span class="p">:</span> <span class="nb">Vec</span><span class="o">&lt;</span><span class="nb">i32</span><span class="o">&gt;</span> <span class="o">=</span> <span class="nd">vec!</span><span class="p">[</span><span class="mi">224</span><span class="p">,</span> <span class="mi">215</span><span class="p">,</span> <span class="mi">364</span><span class="p">,</span> <span class="mi">241</span><span class="p">];</span>
	<span class="c">// Dengan push()</span>
	<span class="k">let</span> <span class="k">mut</span> <span class="n">y</span><span class="p">:</span> <span class="nb">Vec</span><span class="o">&lt;</span><span class="nb">i32</span><span class="o">&gt;</span> <span class="o">=</span> <span class="nn">Vec</span><span class="p">::</span><span class="nf">new</span><span class="p">();</span>
	
	<span class="n">y</span><span class="nf">.push</span><span class="p">(</span><span class="mi">123</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
:ET