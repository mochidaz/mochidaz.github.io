I"u<p><img src="/images/rust-2.png" alt="rust" /></p>

<h2 id="variabel">Variabel</h2>
<p>Pada bahasa Rust, kita dapat mendeklarasikan variabel dengan tiga keyword berikut: <code class="language-plaintext highlighter-rouge">const</code>, <code class="language-plaintext highlighter-rouge">static</code>, dan <code class="language-plaintext highlighter-rouge">let</code>.
Variabel <code class="language-plaintext highlighter-rouge">const</code> tidak akan dapat diubah atau immutable. Variabel <code class="language-plaintext highlighter-rouge">static</code> dapat diubah, namun membutuhkan keyword <code class="language-plaintext highlighter-rouge">unsafe</code>
karena operasi ini tidak aman bagi memory. Untuk <code class="language-plaintext highlighter-rouge">let</code>, <code class="language-plaintext highlighter-rouge">let</code> merupakan keyword paling umum untuk mendefinisikan variabel
dalam Rust. Tidak seperti <code class="language-plaintext highlighter-rouge">static</code> dan <code class="language-plaintext highlighter-rouge">const</code>, <code class="language-plaintext highlighter-rouge">let</code> <strong>TIDAK DAPAT</strong>	 digunakan diluar fungsi. Bila anda menggunakan <code class="language-plaintext highlighter-rouge">static</code> maupun
<code class="language-plaintext highlighter-rouge">const</code>, anda harus mendefinisikan tipe datanya secara eksplisit, sedangkan <code class="language-plaintext highlighter-rouge">let</code> tidak perlu karena compiler akan menentukannya sendiri. 
Namun, keyword <code class="language-plaintext highlighter-rouge">let</code> meiliki tipe data default. Bila anda me-assign sebuah nilai integer contohnya kepada variabel yang dideklarasikan dengan
keyword <code class="language-plaintext highlighter-rouge">let</code>, maka integer tersebut otomatis akan menjadi 32 bit integer (i32). Bila anda ingin memakai 8 bit integer, maka anda harus 
menuliskannya secara eksplisit. Hal ini juga berlaku pada nilai float.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">const</span> <span class="n">FOO</span><span class="p">:</span> <span class="nb">i8</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
<span class="k">static</span> <span class="n">BAR</span><span class="p">:</span> <span class="nb">i8</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="c">// i32</span>
  <span class="k">let</span> <span class="n">baz</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
  <span class="c">// i8</span>
  <span class="k">let</span> <span class="n">qux</span><span class="p">:</span> <span class="nb">i8</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="mutability">Mutability</h2>
<p>Berikutnya adalah mutability, atau bisa tidaknya variabel tersebut diubah nilainya. Secara default, variabel dalam rust semuanya 
immutable atau tidak dapat diubah. Untuk membuat sebuah variabel mutable atau dapat diubah, diperlukan sebuah keyword yang bernama <code class="language-plaintext highlighter-rouge">mut</code>. <code class="language-plaintext highlighter-rouge">mut</code> memungkinkan kita 
untuk re-assign atau memberikan nilai kembali pada suatu variabel. Bila anda mengubah nilai dari suatu variabel tanpa keyword <code class="language-plaintext highlighter-rouge">mut</code>, maka akan terjadi error.</p>

<div class="language-rust highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">let</span> <span class="k">mut</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
  <span class="c">// Output: 10</span>
  <span class="nd">println!</span><span class="p">(</span><span class="s">"{}"</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
  <span class="n">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
  <span class="c">// Output: 5</span>
  <span class="nd">println!</span><span class="p">(</span><span class="s">"{}"</span><span class="p">,</span> <span class="n">x</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="tipe-data-dalam-bahasa-rust">Tipe Data dalam Bahasa Rust</h2>

<h3 id="primitive-type">Primitive Type</h3>

<table>
  <thead>
    <tr>
      <th>Tipe Data</th>
      <th>Nama Tipe</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i8</code></td>
      <td>8-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i16</code></td>
      <td>16-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i32</code></td>
      <td>32-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i64</code></td>
      <td>64-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">i128</code></td>
      <td>128-bit Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u8</code></td>
      <td>8-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u16</code></td>
      <td>16-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u32</code></td>
      <td>32-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u64</code></td>
      <td>64-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">u128</code></td>
      <td>128-bit Unsigned Integer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">f32</code></td>
      <td>32-bit Floating Point</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">f64</code></td>
      <td>64-bit Floating Point</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">f128</code></td>
      <td>128-bit Float</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">str</code></td>
      <td>String Slices</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">bool</code></td>
      <td>Boolean</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">char</code></td>
      <td>Character</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">array</code></td>
      <td>Array dengan ukuran tetap</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">usize</code></td>
      <td>Unsigned Integer dengan ukuran Pointer</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">tuple</code></td>
      <td>Tuple</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">slice</code></td>
      <td>Slice</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">isize</code></td>
      <td>Signed Integer dengan ukuran Pointer</td>
    </tr>
  </tbody>
</table>

:ET